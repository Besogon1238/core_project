services:

  eureka-server: # Добавляем Eureka Server
    image: devakash/eureka:latest
    ports:
      - "80:8762"
    restart: always
    networks:
      - app-network

  api-gateway:
    build:
      context: ./Project
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - core-service
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka

  core-service:
    build:
      context: ./core_project
    container_name: core-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/shopDB
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka

    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - postgres

  # База данных PostgreSQL
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=shopDB
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    ports:
      - "5434:5432"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local